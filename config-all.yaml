appName: go_emqx_exhook
port: 16565

# grpc server tls
tls:
  enable: true
  caFile: certs/ca/ca.crt
  certFile: certs/server/server.crt
  keyFile: certs/server/server.key

# Rocketmq、Kafka、Rabbitmq、RabbitmqStream、Redis
mqType: Rocketmq

# emqx 主题
bridgeRule:
  topics:
    - "/#"

# rocketmq 配置，需要提前创建 主题(emqx_exhook)
rocketmqConfig:
  nameServer:
    - 127.0.0.1:9876
  topic: emqx_exhook
  tag: exhook
  groupName: exhook
  #accessKey: exhook
  #secretKey: exhook


# rabbitmq 配置，需要提前创建 队列(exhook_queue) 并且绑定 交换机(amq.direct)
rabbitmqConfig:
  addresses:
    - amqp://guest:guest@127.0.0.1:5672
  exchangeName: amq.direct
  routingKeys: emqx_exhook
  tls:
    enable: true
    tlsSkipVerify: true
    caFile: /apps/server.cer.pem
    certFile: /apps/client.cer.pem
    keyFile: /apps/client.key.pem


# RabbitmqStream 配置，需要提前创建 流 emqx_exhook
rabbitmqStreamConfig:
  addresses:
    - rabbitmq-stream://guest:guest@127.0.0.1:5552
  streamName: emqx_exhook
  maxProducersPerClient: 2
  tls:
    enable: true
    tlsSkipVerify: true
    caFile: /apps/server.cer.pem
    certFile: /apps/client.cer.pem
    keyFile: /apps/client.key.pem


# kafka 配置，需要提前创建 主题(emqx_exhook)
kafkaConfig:
  addresses:
    - 127.0.0.1:9092
  topic: emqx_exhook
  # 消息压缩类型 支持: "none", "gzip", "snappy", "lz4", "zstd", 默认: "none"
  compressionCodec: none
  sasl:
    enable: true
    user: admin
    password: admin123456
  tls:
    enable: true
    tlsSkipVerify: true
    caFile: /apps/server.cer.pem
    certFile: /apps/client.cer.pem
    keyFile: /apps/client.key.pem


# redis 配置
redisConfig:
  addresses:
    - 127.0.0.1:6379
  streamName: emqx_exhook
  streamMaxLen: -1
  db: 0
  username: redis123
  password: redis123456
  masterName: mymaster
  sentinelUsername: sentinel123456
  sentinelPassword: sentinel123456


# 发送方式 queue or direct ，默认 queue
# 注: redis 和 rabbitmq 不支持队列发送
sendMethod: queue


queue:
  batchSize: 100
  workers: 2
  lingerTime: 1
